#include <iostream>
using namespace std;

int partition(int *arr,int s,int e){
    int pivot = arr[s];
    int count  = 0; // define the number of elemnts which is greater than pivot element
    
    for(int i = s+1;i<=e;i++)
     if(arr[i] < pivot)
      count++;
    
    int pivotIndex = s + count;
    
    int i = s;
    int j = e;
    
    int t = arr[pivotIndex];
    arr[pivotIndex] = pivot;
    arr[s] = t;
    
    while(i > pivotIndex && j < pivotIndex){
        
        while(arr[i] < pivot) // increase the index at position which is greater element than pivot
          i++;
        
        while(arr[j] > pivot) // decrease the index at position which is lesser element the pivot
          j--;
          
          
          
        if(i > pivotIndex && j < pivotIndex) { // then check and swap the element
            int temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;j--;
        } 
    }
    return pivotIndex;
}


void quickSort(int *arr,int s,int e){
    if(s >= e)
     return;

    int p = partition(arr,s,e);
    
    // quickSort on left side
    quickSort(arr,s,p);
    // quickSort on right side
    quickSort(arr,p+1,e);
}


int main()
{
    int arr[]={1,4,3,2,5,6,5,8,33,22,9};
    int size = sizeof(arr)/sizeof(arr[0]);

    quickSort(arr,0,size-1);

    for(int i = 0;i < size;i++)
     cout<<arr[i]<<" ";

    return 0;
}
